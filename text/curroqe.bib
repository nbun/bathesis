@Article{p19mehner,
  title = "Parametricity and Proving Free Theorems for
		 Functional-Logic Languages",
  author =	"Stefan Mehner and Daniel Seidel and Lutz
		 Stra{\ss}burger and Janis Voigtl{\"a}nder",
  publisher =	"HAL CCSD",
  year = 	"2014",
  month =	dec,
  oai =  	"oai:HAL:hal-01092357v1",
  type = 	"info:eu-repo/semantics/conferenceObject",
  URL =  	"https://hal.inria.fr/hal-01092357;
		 https://hal.inria.fr/hal-01092357/document;
		 https://hal.inria.fr/hal-01092357/file/ppdp2014-final.pdf",
} 
@MISC{kics2manual,
    author = {Michael {Hanus [editor]} and Bernd Braßel and Björn Peemöller and Fabian Reck},
    title = {Ki{CS}2: The {K}iel {C}urry {S}ystem ({V}ersion 2) {U}ser {M}anual},
    year = 2016,
    month= aug,
    URL = "https://www.informatik.uni-kiel.de/~mh/papers/GanzingerFestschrift.pdf",
}
@INPROCEEDINGS{Hanus13,
author       = {Hanus, M.},
title        = {Functional Logic Programming: From Theory to {Curry}},
year         = {2013},
booktitle    = {Programming Logics - Essays in Memory of Harald Ganzinger},
pages        = {123-168},
publisher    = {Springer LNCS 7797},
abstract = {
Functional logic programming languages combine the most important
declarative programming paradigms, and attempts to combine these
paradigms have a long history.  The declarative multi-paradigm
language Curry is influenced by recent advances in the
foundations and implementation of functional logic languages.
The development of Curry is an international initiative intended
to provide a common platform for the research, teaching, and
application of integrated functional logic languages. This paper
surveys the foundations of functional logic programming that are
relevant for Curry, the main features of Curry, and extensions
and applications of Curry and functional logic programming.
}
}
